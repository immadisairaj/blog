"use strict";(self.webpackChunkdocusaurus_blog=self.webpackChunkdocusaurus_blog||[]).push([[351],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=i.createContext({}),s=function(e){var n=i.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=s(e.components);return i.createElement(d.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),h=a,g=u["".concat(d,".").concat(h)]||u[h]||c[h]||o;return t?i.createElement(g,r(r({ref:n},p),{},{components:t})):i.createElement(g,r({ref:n},p))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,r=new Array(o);r[0]=u;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var s=2;s<o;s++)r[s]=t[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3901:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var i=t(7462),a=(t(7294),t(3905));const o={slug:"2021/build-arrow-pad/",title:"Build an Arrow Pad in Flutter",date:"2021-12-17 10:52:00 +0530",tags:["Flutter","Tech"],authors:["immadisairaj"],comments:!0,image:"./thumbnil.png"},r=void 0,l={permalink:"/blog/2021/build-arrow-pad/",source:"@site/blog/2021-12-17-build-arrow-pad/index.md",title:"Build an Arrow Pad in Flutter",description:"Want to build a cool widget in flutter? This blog contains how I had developed an arrow pad.",date:"2021-12-17T10:52:00.000Z",formattedDate:"December 17, 2021",tags:[{label:"Flutter",permalink:"/blog/tags/flutter"},{label:"Tech",permalink:"/blog/tags/tech"}],readingTime:6.07,hasTruncateMarker:!0,authors:[{name:"Sai Rajendra Immadi",title:"Flutter Developer",url:"https://github.com/immadisairaj",imageURL:"https://github.com/immadisairaj.png",key:"immadisairaj"}],frontMatter:{slug:"2021/build-arrow-pad/",title:"Build an Arrow Pad in Flutter",date:"2021-12-17 10:52:00 +0530",tags:["Flutter","Tech"],authors:["immadisairaj"],comments:!0,image:"./thumbnil.png"},prevItem:{title:"GitHub Actions to deploy Flutter Web to gh-pages",permalink:"/blog/2022/github-actions-for-flutter-web/"},nextItem:{title:"Effort Behind a Dance Program",permalink:"/blog/2021/effort-behind-a-dance-program/"}},d={image:t(6413).Z,authorsImageUrls:[void 0]},s=[{value:"Arrow Pad",id:"arrow-pad",level:2},{value:"Designing",id:"designing",level:3},{value:"Code",id:"code",level:3},{value:"Handle Click",id:"handle-click",level:3},{value:"Final Touch-up",id:"final-touch-up",level:3}],p={toc:s};function c(e){let{components:n,...o}=e;return(0,a.kt)("wrapper",(0,i.Z)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Want to build a cool widget in flutter? This blog contains how I had developed an arrow pad."),(0,a.kt)("h2",{id:"arrow-pad"},"Arrow Pad"),(0,a.kt)("p",null,"Arrow Pad? What is it? Well, it's just a pad containing arrow's and responds to the inputs we give. The first thing which comes to mind is the arrow keys in a computer. Isn't it? But that is not what inspired me and instead is mp3 players."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Computer Arrow Keys",src:t(9438).Z,width:"400",height:"268"})),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Compouter Arrow Keys on Keyboard ",(0,a.kt)("a",{parentName:"em",href:"https://usefulicons.com/lonely/arrow-keys"},"Image Source"))),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Wiwoo H9 mp3 player",src:t(8851).Z,width:"450",height:"450"})),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Wiwoo H9 mp3 player ",(0,a.kt)("a",{parentName:"em",href:"https://www.walmart.ca/en/ip/Wiwoo-H9-2-4-inch-MP3-Music-Audio-Player-16GB-Black-Refurbished/PRD5QFLW97DWB8P"},"Image Source"))),(0,a.kt)("h3",{id:"designing"},"Designing"),(0,a.kt)("p",null,"Designing? I guess not. The design is absolute looking at the mp3 players. Now, Let's not waste time and dive into the code."),(0,a.kt)("p",null,"Linking an image of how I thought it should be (and how it will be)."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Final design on how it looks",src:t(651).Z,width:"644",height:"466"})),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Final design on how it looks")),(0,a.kt)("h3",{id:"code"},"Code"),(0,a.kt)("p",null,"I would want to call this ",(0,a.kt)("inlineCode",{parentName:"p"},"ArrowPad"),". So, let's start by creating the class."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"// arrow_pad.dart\nimport 'package:flutter/material.dart';\nclass ArrowPad extends StatelessWidget {\n  const ArrowPad({ Key? key }) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      // TODO: build arrow pad\n    );\n  }\n}\n")),(0,a.kt)("p",null,"I would first take input on the height and width of the widget. Using these, we can be sure that the widget builds as intended."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"// arrow_pad.dart\nimport 'dart:math';\nimport 'package:flutter/material.dart';\n\nclass ArrowPad extends StatelessWidget {\n  const ArrowPad({\n    Key? key,\n    required this.height,\n    required this.width,\n  }) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    // size of the widget\n    double _padSize = min(height, width);\n    return Container(\n      height: height,\n      width: width,\n      color: Colors.transparent, // we don't want container to be visible\n      // to make sure the widget is in the center\n      child: Center(\n          // TODO: add child\n      ),\n    );\n  }\n}\n")),(0,a.kt)("p",null,"Now that the base code is done, let's start with outer circle. We can use a container with a color and circle shape."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"Container(\n    decoration: BoxDecoration(\n        color: Colors.yellow, // let's put some color for now\n        shape: BoxShape.circle,\n    ),\n    height: _padSize,\n    width: _padSize,\n    // add child\n),\n")),(0,a.kt)("p",null,"Going next, let's add the inner circle. I want to show a small elevation as to have a button feel. So, I will be using a card."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"// we don't want to miss the padding\nPadding(\n    padding: const EdgeInsets.all(5.0),\n    child: Center(\n        // material is used so to have a ripple effect when pressed later\n        child: Material(\n        color: Colors.transparent,\n        child: Card(\n            elevation: 5,\n            shape: RoundedRectangleBorder(\n                borderRadius: BorderRadius.circular(_padSize),\n                ),\n            ),\n            // add child\n        ),\n    ),\n),\n")),(0,a.kt)("p",null,"Now moving on, we just need to add the icons with ripple effect. I will go with ",(0,a.kt)("inlineCode",{parentName:"p"},"Cupertino")," icons as they look good for the pad."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter/cupertino.dart';\n// inkwell for ripple effect\nInkWell(\n    borderRadius: BorderRadius.circular(_padSize - 10),\n    onTap: () {},\n    child: Column(\n        // fill the space\n        mainAxisSize: MainAxisSize.max,\n        // space around to equally balance the children\n        mainAxisAlignment: MainAxisAlignment.spaceAround,\n        children: [\n        Icon(\n            CupertinoIcons.chevron_up,\n            size: _padSize / 4,\n        ),\n        // row is for left and right\n        Row(\n            // fill the space\n            mainAxisSize: MainAxisSize.max,\n            // keep a gap in between\n            mainAxisAlignment: MainAxisAlignment.spaceBetween,\n            children: [\n            Icon(\n                CupertinoIcons.chevron_left,\n                size: _padSize / 4,\n            ),\n            Icon(\n                CupertinoIcons.chevron_right,\n                size: _padSize / 4,\n            ),\n            ],\n        ),\n        Icon(\n            CupertinoIcons.chevron_down,\n            size: _padSize / 4,\n        ),\n        ],\n    ),\n),\n")),(0,a.kt)("p",null,"After putting up all the widgets into their place. Let's look at how the widget is now."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Final build after putting up widgets together",src:t(7945).Z,width:"450",height:"439"})),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Final build after putting up widgets together")),(0,a.kt)("h3",{id:"handle-click"},"Handle Click"),(0,a.kt)("p",null,"Till here, the building was smooth. But, the widget is not complete without its response when the key is pressed. You'd think why I didn't use the ",(0,a.kt)("inlineCode",{parentName:"p"},"IconButton"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"IconButton")," has its material style and will override the ripple effect we want."),(0,a.kt)("p",null,"But, instead we have a InkWell property which has ",(0,a.kt)("inlineCode",{parentName:"p"},"onTapDown"),". It provides us the user tap location. We can use it to achieve our goal to determine where the user has clicked."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Widget partitions",src:t(6885).Z,width:"450",height:"439"})),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Widget partitions")),(0,a.kt)("p",null,"I divided the widget into 9 equal parts. By looking at the image, there are only 4 parts which we need to look at to call the feedback."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Top Arrow: Top Middle\nLeft Arrow: Left Middle\nRight Arrow: Right Middle\nDown Arrow: Down Middle\n")),(0,a.kt)("p",null,"taking the calculations of x position and y position. The final method looks like"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"onTapDown: (details) {\n    double x = details.localPosition.dx;\n    double y = details.localPosition.dy;\n    double part = (_padSize - 20) / 3;\n    if (x > part && x < part * 2) {\n    // up or down\n    if (y < part) {\n        print('up');\n    } else if (y > part * 2) {\n        print('down');\n    }\n    } else if (y > part && y < part * 2) {\n    // left or right\n    if (x < part) {\n        print('left');\n    } else if (x > part * 2) {\n        print('right');\n    }\n    }\n},\n")),(0,a.kt)("p",null,"This method completes our widget. which can work even with feedback. Below is how it works"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Working Demo of the widget",src:t(8510).Z,width:"1046",height:"492"})),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Working Demo of the widget")),(0,a.kt)("h3",{id:"final-touch-up"},"Final Touch-up"),(0,a.kt)("p",null,"Now, putting all pieces to together with some added toppings. The whole widget looks like this."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"// arrow-pad.dart\nimport 'dart:math';\nimport 'package:flutter/cupertino.dart';\nimport 'package:flutter/material.dart';\n\nclass ArrowPad extends StatelessWidget {\n  const ArrowPad({\n    Key? key,\n    required this.height,\n    required this.width,\n    this.tapUp,\n    this.tapDown,\n    this.tapLeft,\n    this.tapRight,\n    this.outerColor = const Color(0xFFE0E0E0),\n    this.innerColor,\n    this.iconColor,\n  }) : super(key: key);\n\n  final double height;\n  final double width;\n  final void Function()? tapUp;\n  final void Function()? tapDown;\n  final void Function()? tapRight;\n  final void Function()? tapLeft;\n  final Color? outerColor;\n  final Color? innerColor;\n  final Color? iconColor;\n\n  @override\n  Widget build(BuildContext context) {\n    double _padSize = min(height, width);\n    return Container(\n      height: height,\n      width: width,\n      color: Colors.transparent,\n      child: Center(\n        child: Container(\n          decoration: BoxDecoration(\n            color: outerColor,\n            shape: BoxShape.circle,\n          ),\n          height: _padSize,\n          width: _padSize,\n          child: Padding(\n            padding: const EdgeInsets.all(5.0),\n            child: Center(\n              child: Material(\n                color: Colors.transparent,\n                child: Card(\n                  color: innerColor,\n                  elevation: 5,\n                  shape: RoundedRectangleBorder(\n                    borderRadius: BorderRadius.circular(_padSize),\n                  ),\n                  child: InkWell(\n                    borderRadius: BorderRadius.circular(_padSize - 10),\n                    onTap: () {},\n                    onTapDown: (details) {\n                      double x = details.localPosition.dx;\n                      double y = details.localPosition.dy;\n                      double part = (_padSize - 20) / 3;\n                      if (x > part && x < part * 2) {\n                        // up or down\n                        if (y < part) {\n                          tapUp!();\n                        } else if (y > part * 2) {\n                          tapDown!();\n                        }\n                      } else if (y > part && y < part * 2) {\n                        // left or right\n                        if (x < part) {\n                          tapLeft!();\n                        } else if (x > part * 2) {\n                          tapRight!();\n                        }\n                      }\n                    },\n                    child: Column(\n                      mainAxisSize: MainAxisSize.max,\n                      mainAxisAlignment: MainAxisAlignment.spaceAround,\n                      children: [\n                        Icon(\n                          CupertinoIcons.chevron_up,\n                          size: _padSize / 4,\n                          color: iconColor,\n                        ),\n                        Row(\n                          mainAxisSize: MainAxisSize.max,\n                          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                          children: [\n                            Icon(\n                              CupertinoIcons.chevron_left,\n                              size: _padSize / 4,\n                              color: iconColor,\n                            ),\n                            Icon(\n                              CupertinoIcons.chevron_right,\n                              size: _padSize / 4,\n                              color: iconColor,\n                            ),\n                          ],\n                        ),\n                        Icon(\n                          CupertinoIcons.chevron_down,\n                          size: _padSize / 4,\n                          color: iconColor,\n                        ),\n                      ],\n                    ),\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n")),(0,a.kt)("p",null,"and it can be used using ",(0,a.kt)("inlineCode",{parentName:"p"},"ArrowPad"),". I know my color scheme is bad. Everything depends on how you use it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"ArrowPad(\n    height: height / 3 - 30,\n    width: 2 * width / 3,\n    tapUp: () => print('up'),\n    tapDown: () => print('down'),\n    tapLeft: () => print('left'),\n    tapRight: () => print('right'),\n    iconColor: Colors.yellow,\n    innerColor: Colors.red,\n    outerColor: Colors.yellow,\n),\n")),(0,a.kt)("p",null,"The widget now looks complete with proper standards and has the usage similar to actual widgets."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Hope you have learnt something from this (not just copy paste)")),(0,a.kt)("p",null,"Happy Fluttering!!"))}c.isMDXComponent=!0},9438:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/arrow-keys-d85e5a86423c32d71ac1f41155fc204f.png"},651:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/arrow-pad-red-yellow-87490c96fa35733b115b075e2af81265.png"},6885:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/arrow-pad-white-yellow-touch-5b0d796738f7e8f1e55785841b39c014.png"},7945:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/arrow-pad-white-yellow-91d4425cd544faf73c669e17c475514b.png"},8851:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/mp3-player-e78b5c539170d56255e116ad9613c70f.jpeg"},6413:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/thumbnil-62eeee3d93f9a05f7b3a25b4860c6034.png"},8510:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/video-7f5d73b2950a54af47a44b5f1f5803fe.gif"}}]);