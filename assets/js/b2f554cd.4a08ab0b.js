"use strict";(self.webpackChunkdocusaurus_blog=self.webpackChunkdocusaurus_blog||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"2022/github-actions-for-flutter-web/","metadata":{"permalink":"/blog/2022/github-actions-for-flutter-web/","source":"@site/blog/2022-08-02-github-actions-for-flutter-web/index.md","title":"GitHub Actions to deploy Flutter Web to gh-pages","description":"Do you deploy your Flutter web application in gh-pages? And you are tired of manually deploying the app every time? Or do you want to deploy your Flutter web application to gh-pages? Then this blog is for you. Continue ahead to know how to simplify the process.","date":"2022-08-02T19:50:00.000Z","formattedDate":"August 2, 2022","tags":[{"label":"Flutter","permalink":"/blog/tags/flutter"},{"label":"Open-Source","permalink":"/blog/tags/open-source"},{"label":"GitHub Actions","permalink":"/blog/tags/git-hub-actions"},{"label":"Tech","permalink":"/blog/tags/tech"}],"readingTime":5.71,"hasTruncateMarker":true,"authors":[{"name":"Sai Rajendra Immadi","title":"Flutter Developer","url":"https://github.com/immadisairaj","imageURL":"https://github.com/immadisairaj.png","key":"immadisairaj"}],"frontMatter":{"slug":"2022/github-actions-for-flutter-web/","title":"GitHub Actions to deploy Flutter Web to gh-pages","date":"2022-08-02 19:50:00 +0530","tags":["Flutter","Open-Source","GitHub Actions","Tech"],"authors":["immadisairaj"],"comments":true,"image":"./thumbnail.jpeg"},"nextItem":{"title":"Build an Arrow Pad in Flutter","permalink":"/blog/2021/build-arrow-pad/"}},"content":"Do you deploy your Flutter web application in gh-pages? And you are tired of manually deploying the app every time? Or do you want to deploy your Flutter web application to gh-pages? Then this blog is for you. Continue ahead to know how to simplify the process.\\n\\n![Thumbnail Design](./thumbnail.jpeg)\\n\\n\x3c!--truncate--\x3e\\n\\n## What are GitHub Actions?\\n\\nIn a simplified manner, Actions are scripts automated to do something after they are on GitHub.\\n\\nOfficially from what GitHub says, GitHub Actions makes it easy to automate all your software workflows, now with world-class CI/CD. Build, test, and deploy your code right from GitHub. Make code reviews, branch management, and issue triaging work the way you want. You can read more about it [here][github-actions].\\n\\n## What are GitHub Pages?\\n\\nIn simple terms, they are static web pages hosted on GitHub via repositories. They are static, which means we won\'t be able to get any data that is dynamic. You can read more about it [here][github-pages].\\n\\nIf you are the one that wants to host static web pages, you can continue. Else, I don\'t want to waste your time.\\n\\n## What are we going to do?\\n\\nOkay, I will get to the point. If you are a Flutter developer, have a static web page built, and want to deploy it. That is where I come in to help you. I make things simpler by deploying your web app to gh-pages with ease.\\n\\n__Let\'s first look at how the following goes:__\\n1. Getting Your Personal Access Token from GitHub\\n2. Adding the Token to GitHub Actions secrets\\n3. Writing GitHub Actions workflow to deploy\\n\\n### Getting Your Personal Access Token from GitHub\\n\\nWhy is this necessary? It is because we build the web app behind the hood and then push the commit to deploy into gh-pages with your GitHub credentials.\\n\\nIf you worry that this method might compromise your security, Don\'t worry, this method won\'t harm you an inch because we won\'t be giving full access to it.\\n\\nTo start, first click [this][new-pat-token] link to generate a new GitHub Personal Access Token.\\n\\n![options to give while creating a Personal Access Token](./pat-setting.png)\\n\\n*options to give while creating a Personal Access Token*\\n\\nYou can set the checkboxes as per the above image. The name can be your custom name, and the duration limit you give is up to your use case.\\n\\nOnce done here, scroll down and click on \\"Generate Token\\".\\n\\nAfter the token is generated, NOTE it down somewhere to be used in the next phase. Let\'s call this token `<YOUR GENERATED PA TOKEN>`.\\n\\n### Adding the Token to GitHub Actions secrets\\n\\nAssuming that you already have the code for the web application in the GitHub repository, I will continue with this phase. If you don\'t have a GitHub repository, you continue once you have one.\\n\\nYou can visit the settings of the project repository to add the token you received before into secrets. You can use the following link.\\n\\n```\\nhttps://github.com/<username>/<repository>/settings/secrets/actions/new\\n```\\n\\n*Make sure to replace `<username>` with your GitHub username and `<repository>` with the repository.\\n\\n![add the Personal Access Token into GitHub Actions secrets](./action-secrets.png)\\n\\n*add the Personal Access Token into GitHub Actions secrets*\\n\\nOnce you see the screen (from the image), you can add your Personal Access Token generated from the previous phase `<YOUR GENERATED PA TOKEN>` with the name `ACCESS_TOKEN` as in the image.\\n\\nNow that we have added the token into GitHub Action secrets, it is safe, and you can delete/remove the previously noted so that it is not known to anyone. And now, we can move on to the next phase.\\n\\n### Writing GitHub Actions workflow to deploy\\n\\nAssuming you have a basic understanding of how to set up a new branch to deploy a web app into GitHub Pages. Else, you can read it [here][deploy-to-gh-pages].\\n\\nIf you don\'t have a separate branch used for deploying, please do create a new branch (preferred `gh-pages`).\\n\\nOnce you have a specific branch name (say `gh-pages`) that uses to deploy into GitHub Pages, you can create a file name `web-deploy.yml` under `.github/workflows` in the root folder of `main` or `master` (or your preference) branch.\\n\\nYou can now copy the below directly into the file specified above while making a few changes.\\n\\nYou can look at comments starting with `#!` in the following to make changes accordingly.\\n\\n\x3c!-- <script async defer src=\\"https://gist.github.com/immadisairaj/69a2942b68ef19f078c3e864ee3c41fe.js\\"><\/script> --\x3e\\n\\n```dart title=\\".github/workflows/web_deploy.yml\\"\\nname: Deploy to GitHub Pages\\n\\non:\\n  push:\\n    # Update branch according from where you will be pushing the code\\n    branches: [ main ]\\n\\njobs:\\n  build:\\n    runs-on: ubuntu-latest\\n    env:\\n      my_secret: ${{secrets.ACCESS_TOKEN}}\\n\\n    steps:\\n      - uses: actions/checkout@v3\\n      - uses: subosito/flutter-action@v2\\n        with:\\n          channel: \'stable\'\\n\\n      - run: flutter clean\\n      - run: flutter pub get\\n      - run: flutter build web --release\\n\\n      # Web deploy now is contained in build/web directory\\n      - run: |\\n          cd build\\n          mkdir web-deploy\\n          cd web-deploy\\n          #! Update with your Email ID associated with GitHub\\n          git config --global user.email <email ID>\\n          #! Update with your username associated with GitHub\\n          git config --global user.name <username>\\n          git config --global init.defaultBranch main\\n          git init\\n          # the repository to push the deploy into\\n          #! Update the following with your username and repository\\n          git remote add origin https://${{secrets.ACCESS_TOKEN}}@github.com/<username>/<repository>.git\\n          git fetch origin gh-pages\\n          git switch gh-pages\\n          # copy the build that is there in ROOT/build/web into ROOT/build/web-deploy\\n          cp -R ../web/* .\\n          git status\\n          git add .\\n          # add commit of the previous commit from main\\n          echo \\"\\"\\n          echo \\"Committing to gh-pages: ${{ github.event.head_commit.message }}\\"\\n          echo \\"\\"\\n          git commit -m \\"${{ github.event.head_commit.message }}\\"\\n          git push origin gh-pages\\n          \\n```\\n\\nOnce done adding it, commit it to the main branch. From this point on, you don\'t need to manually push the build to the deployment after having new changes.\\n\\n### Bonus\\n\\nYou can continue with the bonus if you want to understand what the above action or script is doing. Else you can skip this.\\n\\nOnce you push the commit into GitHub Repository (say `main` branch), the GitHub Action is triggered (following steps).\\n- Installs flutter in the ubuntu-latest system.\\n- Builds flutter web into `/build/web`.\\n- Pull the `gh-pages` branch from the repository into `/build/web-deploy`.\\n- Copy the build from `/build/web` to `/build/web-deploy`.\\n- Commit the change with the commit message that triggered this action.\\n- Push the new commit to `gh-pages` branch into the repository (for which the personal access token is useful). This push, in turn, starts another GitHub Action to deploy the site.\\n\\n## Conclusion\\n\\nAfter this long 3 step process, you have now automated the process to deploy your Flutter web into GitHub Pages. Once you push a new commit, this GitHub Action starts and a new commit for you to deploy GitHub Pages.\\n\\nNow, use the time I saved into something helpful and Happy Fluttering!\\n\\n\\nIf this has been useful, please consider sponsoring me via\\n<iframe src=\\"https://github.com/sponsors/immadisairaj/card\\" title=\\"Sponsor immadisairaj\\" height=\\"200\\" width=\\"600\\"></iframe>\\n\\n[github-actions]: https://github.com/features/actions\\n[github-pages]: https://pages.github.com\\n[new-pat-token]: https://github.com/settings/tokens/new\\n[deploy-to-gh-pages]: https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site"},{"id":"2021/build-arrow-pad/","metadata":{"permalink":"/blog/2021/build-arrow-pad/","source":"@site/blog/2021-12-17-build-arrow-pad/index.md","title":"Build an Arrow Pad in Flutter","description":"Want to build a cool widget in flutter? This blog contains how I had developed an arrow pad.","date":"2021-12-17T10:52:00.000Z","formattedDate":"December 17, 2021","tags":[{"label":"Flutter","permalink":"/blog/tags/flutter"},{"label":"Tech","permalink":"/blog/tags/tech"}],"readingTime":6.07,"hasTruncateMarker":true,"authors":[{"name":"Sai Rajendra Immadi","title":"Flutter Developer","url":"https://github.com/immadisairaj","imageURL":"https://github.com/immadisairaj.png","key":"immadisairaj"}],"frontMatter":{"slug":"2021/build-arrow-pad/","title":"Build an Arrow Pad in Flutter","date":"2021-12-17 10:52:00 +0530","tags":["Flutter","Tech"],"authors":["immadisairaj"],"comments":true,"image":"./thumbnil.png"},"prevItem":{"title":"GitHub Actions to deploy Flutter Web to gh-pages","permalink":"/blog/2022/github-actions-for-flutter-web/"},"nextItem":{"title":"Effort Behind a Dance Program","permalink":"/blog/2021/effort-behind-a-dance-program/"}},"content":"Want to build a cool widget in flutter? This blog contains how I had developed an arrow pad.\\n\\n## Arrow Pad\\n\\nArrow Pad? What is it? Well, it\'s just a pad containing arrow\'s and responds to the inputs we give. The first thing which comes to mind is the arrow keys in a computer. Isn\'t it? But that is not what inspired me and instead is mp3 players.\\n\\n\x3c!--truncate--\x3e\\n\\n![Computer Arrow Keys](./arrow-keys.png)\\n\\n*Compouter Arrow Keys on Keyboard [Image Source](https://usefulicons.com/lonely/arrow-keys)*\\n\\n![Wiwoo H9 mp3 player](./mp3-player.jpeg)\\n\\n*Wiwoo H9 mp3 player [Image Source](https://www.walmart.ca/en/ip/Wiwoo-H9-2-4-inch-MP3-Music-Audio-Player-16GB-Black-Refurbished/PRD5QFLW97DWB8P)*\\n\\n### Designing\\n\\nDesigning? I guess not. The design is absolute looking at the mp3 players. Now, Let\'s not waste time and dive into the code.\\n\\nLinking an image of how I thought it should be (and how it will be).\\n\\n![Final design on how it looks](./arrow-pad-red-yellow.png)\\n\\n*Final design on how it looks*\\n\\n### Code\\n\\nI would want to call this `ArrowPad`. So, let\'s start by creating the class.\\n\\n```dart\\n// arrow_pad.dart\\nimport \'package:flutter/material.dart\';\\nclass ArrowPad extends StatelessWidget {\\n  const ArrowPad({ Key? key }) : super(key: key);\\n\\n  @override\\n  Widget build(BuildContext context) {\\n    return Container(\\n      // TODO: build arrow pad\\n    );\\n  }\\n}\\n```\\n\\nI would first take input on the height and width of the widget. Using these, we can be sure that the widget builds as intended.\\n\\n```dart\\n// arrow_pad.dart\\nimport \'dart:math\';\\nimport \'package:flutter/material.dart\';\\n\\nclass ArrowPad extends StatelessWidget {\\n  const ArrowPad({\\n    Key? key,\\n    required this.height,\\n    required this.width,\\n  }) : super(key: key);\\n\\n  @override\\n  Widget build(BuildContext context) {\\n    // size of the widget\\n    double _padSize = min(height, width);\\n    return Container(\\n      height: height,\\n      width: width,\\n      color: Colors.transparent, // we don\'t want container to be visible\\n      // to make sure the widget is in the center\\n      child: Center(\\n          // TODO: add child\\n      ),\\n    );\\n  }\\n}\\n```\\n\\nNow that the base code is done, let\'s start with outer circle. We can use a container with a color and circle shape.\\n\\n```dart\\nContainer(\\n    decoration: BoxDecoration(\\n        color: Colors.yellow, // let\'s put some color for now\\n        shape: BoxShape.circle,\\n    ),\\n    height: _padSize,\\n    width: _padSize,\\n    // add child\\n),\\n```\\n\\nGoing next, let\'s add the inner circle. I want to show a small elevation as to have a button feel. So, I will be using a card.\\n\\n```dart\\n// we don\'t want to miss the padding\\nPadding(\\n    padding: const EdgeInsets.all(5.0),\\n    child: Center(\\n        // material is used so to have a ripple effect when pressed later\\n        child: Material(\\n        color: Colors.transparent,\\n        child: Card(\\n            elevation: 5,\\n            shape: RoundedRectangleBorder(\\n                borderRadius: BorderRadius.circular(_padSize),\\n                ),\\n            ),\\n            // add child\\n        ),\\n    ),\\n),\\n```\\nNow moving on, we just need to add the icons with ripple effect. I will go with `Cupertino` icons as they look good for the pad.\\n\\n```dart\\nimport \'package:flutter/cupertino.dart\';\\n// inkwell for ripple effect\\nInkWell(\\n    borderRadius: BorderRadius.circular(_padSize - 10),\\n    onTap: () {},\\n    child: Column(\\n        // fill the space\\n        mainAxisSize: MainAxisSize.max,\\n        // space around to equally balance the children\\n        mainAxisAlignment: MainAxisAlignment.spaceAround,\\n        children: [\\n        Icon(\\n            CupertinoIcons.chevron_up,\\n            size: _padSize / 4,\\n        ),\\n        // row is for left and right\\n        Row(\\n            // fill the space\\n            mainAxisSize: MainAxisSize.max,\\n            // keep a gap in between\\n            mainAxisAlignment: MainAxisAlignment.spaceBetween,\\n            children: [\\n            Icon(\\n                CupertinoIcons.chevron_left,\\n                size: _padSize / 4,\\n            ),\\n            Icon(\\n                CupertinoIcons.chevron_right,\\n                size: _padSize / 4,\\n            ),\\n            ],\\n        ),\\n        Icon(\\n            CupertinoIcons.chevron_down,\\n            size: _padSize / 4,\\n        ),\\n        ],\\n    ),\\n),\\n```\\n\\nAfter putting up all the widgets into their place. Let\'s look at how the widget is now.\\n\\n![Final build after putting up widgets together](./arrow-pad-white-yellow.png)\\n\\n*Final build after putting up widgets together*\\n\\n### Handle Click\\n\\nTill here, the building was smooth. But, the widget is not complete without its response when the key is pressed. You\'d think why I didn\'t use the `IconButton`. `IconButton` has its material style and will override the ripple effect we want.\\n\\nBut, instead we have a InkWell property which has `onTapDown`. It provides us the user tap location. We can use it to achieve our goal to determine where the user has clicked.\\n\\n![Widget partitions](./arrow-pad-white-yellow-touch.png)\\n\\n*Widget partitions*\\n\\nI divided the widget into 9 equal parts. By looking at the image, there are only 4 parts which we need to look at to call the feedback.\\n\\n```\\nTop Arrow: Top Middle\\nLeft Arrow: Left Middle\\nRight Arrow: Right Middle\\nDown Arrow: Down Middle\\n```\\n\\ntaking the calculations of x position and y position. The final method looks like\\n\\n```dart\\nonTapDown: (details) {\\n    double x = details.localPosition.dx;\\n    double y = details.localPosition.dy;\\n    double part = (_padSize - 20) / 3;\\n    if (x > part && x < part * 2) {\\n    // up or down\\n    if (y < part) {\\n        print(\'up\');\\n    } else if (y > part * 2) {\\n        print(\'down\');\\n    }\\n    } else if (y > part && y < part * 2) {\\n    // left or right\\n    if (x < part) {\\n        print(\'left\');\\n    } else if (x > part * 2) {\\n        print(\'right\');\\n    }\\n    }\\n},\\n```\\n\\nThis method completes our widget. which can work even with feedback. Below is how it works\\n\\n![Working Demo of the widget](./video.gif)\\n\\n*Working Demo of the widget*\\n\\n### Final Touch-up\\n\\nNow, putting all pieces to together with some added toppings. The whole widget looks like this.\\n\\n```dart\\n// arrow-pad.dart\\nimport \'dart:math\';\\nimport \'package:flutter/cupertino.dart\';\\nimport \'package:flutter/material.dart\';\\n\\nclass ArrowPad extends StatelessWidget {\\n  const ArrowPad({\\n    Key? key,\\n    required this.height,\\n    required this.width,\\n    this.tapUp,\\n    this.tapDown,\\n    this.tapLeft,\\n    this.tapRight,\\n    this.outerColor = const Color(0xFFE0E0E0),\\n    this.innerColor,\\n    this.iconColor,\\n  }) : super(key: key);\\n\\n  final double height;\\n  final double width;\\n  final void Function()? tapUp;\\n  final void Function()? tapDown;\\n  final void Function()? tapRight;\\n  final void Function()? tapLeft;\\n  final Color? outerColor;\\n  final Color? innerColor;\\n  final Color? iconColor;\\n\\n  @override\\n  Widget build(BuildContext context) {\\n    double _padSize = min(height, width);\\n    return Container(\\n      height: height,\\n      width: width,\\n      color: Colors.transparent,\\n      child: Center(\\n        child: Container(\\n          decoration: BoxDecoration(\\n            color: outerColor,\\n            shape: BoxShape.circle,\\n          ),\\n          height: _padSize,\\n          width: _padSize,\\n          child: Padding(\\n            padding: const EdgeInsets.all(5.0),\\n            child: Center(\\n              child: Material(\\n                color: Colors.transparent,\\n                child: Card(\\n                  color: innerColor,\\n                  elevation: 5,\\n                  shape: RoundedRectangleBorder(\\n                    borderRadius: BorderRadius.circular(_padSize),\\n                  ),\\n                  child: InkWell(\\n                    borderRadius: BorderRadius.circular(_padSize - 10),\\n                    onTap: () {},\\n                    onTapDown: (details) {\\n                      double x = details.localPosition.dx;\\n                      double y = details.localPosition.dy;\\n                      double part = (_padSize - 20) / 3;\\n                      if (x > part && x < part * 2) {\\n                        // up or down\\n                        if (y < part) {\\n                          tapUp!();\\n                        } else if (y > part * 2) {\\n                          tapDown!();\\n                        }\\n                      } else if (y > part && y < part * 2) {\\n                        // left or right\\n                        if (x < part) {\\n                          tapLeft!();\\n                        } else if (x > part * 2) {\\n                          tapRight!();\\n                        }\\n                      }\\n                    },\\n                    child: Column(\\n                      mainAxisSize: MainAxisSize.max,\\n                      mainAxisAlignment: MainAxisAlignment.spaceAround,\\n                      children: [\\n                        Icon(\\n                          CupertinoIcons.chevron_up,\\n                          size: _padSize / 4,\\n                          color: iconColor,\\n                        ),\\n                        Row(\\n                          mainAxisSize: MainAxisSize.max,\\n                          mainAxisAlignment: MainAxisAlignment.spaceBetween,\\n                          children: [\\n                            Icon(\\n                              CupertinoIcons.chevron_left,\\n                              size: _padSize / 4,\\n                              color: iconColor,\\n                            ),\\n                            Icon(\\n                              CupertinoIcons.chevron_right,\\n                              size: _padSize / 4,\\n                              color: iconColor,\\n                            ),\\n                          ],\\n                        ),\\n                        Icon(\\n                          CupertinoIcons.chevron_down,\\n                          size: _padSize / 4,\\n                          color: iconColor,\\n                        ),\\n                      ],\\n                    ),\\n                  ),\\n                ),\\n              ),\\n            ),\\n          ),\\n        ),\\n      ),\\n    );\\n  }\\n}\\n```\\n\\nand it can be used using `ArrowPad`. I know my color scheme is bad. Everything depends on how you use it.\\n\\n```dart\\nArrowPad(\\n    height: height / 3 - 30,\\n    width: 2 * width / 3,\\n    tapUp: () => print(\'up\'),\\n    tapDown: () => print(\'down\'),\\n    tapLeft: () => print(\'left\'),\\n    tapRight: () => print(\'right\'),\\n    iconColor: Colors.yellow,\\n    innerColor: Colors.red,\\n    outerColor: Colors.yellow,\\n),\\n```\\n\\nThe widget now looks complete with proper standards and has the usage similar to actual widgets.\\n\\n> Hope you have learnt something from this (not just copy paste)\\n\\nHappy Fluttering!!"},{"id":"2021/effort-behind-a-dance-program/","metadata":{"permalink":"/blog/2021/effort-behind-a-dance-program/","source":"@site/blog/2021-11-08-effort-behind-a-dance-program/index.md","title":"Effort Behind a Dance Program","description":"How is a Bharatanatyam Dance Program organized? This blog answers the question in detail.","date":"2021-11-08T13:27:00.000Z","formattedDate":"November 8, 2021","tags":[{"label":"Bharatanatyam","permalink":"/blog/tags/bharatanatyam"},{"label":"Music","permalink":"/blog/tags/music"}],"readingTime":7.99,"hasTruncateMarker":true,"authors":[{"name":"Sai Rajendra Immadi","title":"Flutter Developer","url":"https://github.com/immadisairaj","imageURL":"https://github.com/immadisairaj.png","key":"immadisairaj"}],"frontMatter":{"slug":"2021/effort-behind-a-dance-program/","title":"Effort Behind a Dance Program","date":"2021-11-08 13:27:00 +0530","tags":["Bharatanatyam","Music"],"authors":["immadisairaj"],"comments":true,"image":"./thumbnil.jpeg"},"prevItem":{"title":"Build an Arrow Pad in Flutter","permalink":"/blog/2021/build-arrow-pad/"},"nextItem":{"title":"Flutter Caching with POST Web Api","permalink":"/blog/2021/flutter-post-caching"}},"content":"How is a Bharatanatyam Dance Program organized? This blog answers the question in detail.\\n\\n__Bharatanatyam:__ It is a traditional Indian Classical Dance form under Carnatic Classical Music (one out of two Indian Music types). This dance form originated from the region of Tamil Nadu.\\n\\n__Bharatanatyam Dance Program:__ An event which includes Bharatanatyam performance in the name of God, dedicated to God (Archana/Worship to the Lord) is a Bharatanatyam Dance Program.\\n\\n![Bharatanatyam](./intro.JPG)\\n\\n\x3c!--truncate--\x3e\\n\\n*Bharatanatyam*\\n\\n# Pre-Planning\\n\\nBefore the actual planning, there are a few things to consider. This phase reduces the chances of any problems/obstacles during the later stages.\\n\\n### Theme\\n\\nBased on a Theme, starts the entire program from titling to choreography to the actual performance. It acts as the centre of the whole event. The event doesn\'t need to have a theme, but having so gives purpose to the event.\\n\\n### Venue\\n\\nChoosing it plays a crucial role in the dance choreography. Different venues have different shapes or sizes. They sometimes either restrict the place to perform or leave a lot of space during the performance. Knowing them properly before choreography brings the most out of it. Apart from knowing them, booking them in before the day of the program also matters.\\n\\n## Planning\\n\\nIn this phase starts the theme-based pre-work. Planning out every aspect depending on how big or small the event can be.\\n\\n### Audio\\n\\nWhat songs to choose for the program? Will it be a recorded or a live orchestra? Answering these questions can be done in this phase.\\n\\n![Live Orchestra](./audio.JPG)\\n\\n*Live Orchestra*\\n\\nThere can be two ways in the selection of audio.\\n1. __Already present__ - Choose from the songs which are already present (with copyright permissions).\\n2. __New__ - For the theme selected, script whole new songs.\\n\\nIf the second option is selected, then hire a scripter to write songs, then record them. Most prefer recording the new songs so that they will remain for a long time.\\n\\nEither way, during the program, it is either have a __recorded song__ or a __live orchestra__.\\n\\n### Scripting and Recording *(if choosen)*\\n\\nScripting is most preferred if the program is on a big scale and a novel ideology implemented. Scripting helps in the complete customization of the songs/drama. After the script is ready, it needs a music director to give a proper shape to it. Recording it completes the songs for the program.\\n\\n### Sponsor\\n\\nIf the theme of a program is something unique or done on a big scale, the organization themselves can\'t afford the entire cost of the event. Asking for sponsorship can help in achieving the desired output. It isn\'t wrong in asking for a sponsor when there is a real need.\\n\\n# Preparation\\n\\nThe time of this phase is the maximum of all the rest. It is also the phase that decides the outcome of the program. We can split this phase into two parallel phases.\\n\\n1. __Front end__ - Preparation of the dancers/performers.\\n2. __Back end__ - Preparation which happens behind the screens.\\n\\n#### I choose these names because I am a technical person. They almost suit the context here.\\n\\n## Front end (On Screen)\\n\\nThis phase contains all the preparation that will be visible On-Stage (On Screen). It mainly focuses on the dancers/presenters.\\n\\n![Final still from a Program](./front-end.JPG)\\n\\n*Final still from a Program*\\n\\n### Dance Choreography\\n\\nA Dance Choreography needs the Choreographer to shape the dance sequences/steps (here in Bharatanatyam) within the given theme. It will mostly be the dance teacher of the organization conducting the event. Choreography is the first step before further proceeding and is the centre for the visual output of the program.\\n\\nDuring dance choreography, there are many things to consider. These include the venue of the program, number of students, their height (personality), songs/audio, costumes, make-up, props, backdrops, visual effects, etc.\\n\\n### Dance Practice\\n\\n> \\"Practice makes a man perfect.\\"\\n\\nIt is applicable everywhere, which includes the practice of a performer. The longer the practice time, the better the performance (preferably at least one month before the program). Based on the dancers\' availability, they need to have many practice sessions within less time. This phase also acts as a place for the choreography or dancer role changes (or any other).\\n\\n### Dance Rehearsal\\n\\nAfter the intense practice, the performers need to adjust to both the audio and the venue. It requires a __\\"stage rehearsal\\"__ and an __\\"orchestra rehearsal\\"__ (if live orchestra). Orchestra rehearsals are done many times in between until the performers adjust. Stage rehearsal can be simulated in a place similar to the venue or done directly in the program venue. A small practice is better for the dancers to implement their shortcomings from the dance rehearsal, making them ready for the performance.\\n\\n## Back end (Behind Screen)\\n\\nThis phase contains all the preparation that is not visible during the program. It runs parallel to front end tasks. It starts after the whole performance takes shape where there can be a visualization of the complete program (near before rehearsal). There is no proper sequence for the following.\\n\\n### Stage Settings\\n\\nIt helps in the output of the program. It includes the backdrops required, visual effects (fog, clouds, rain), lighting, sound (speakers), etc. All of these are to adjust based on one\'s needs depending on the program. The venue provides a few things from above. But, utilizing them or hiring others is decided based on the output of the program. This phase contains choosing and hiring the above needed.\\n\\n### Costumes and Make-up\\n\\nCostumes and Make-up are chosen and selected to show the properness of the performer role. Costumes can either be rented or stiched (new). Hiring a Make-up person(s) to make the performers close to their performing roles gives a better look than self make-up. Getting costumes and make-up also include the props needed for the performs.\\n\\n![Nava Durga](./make-up.jpeg)\\n\\n*Nava Durga*\\n\\n### Guests\\n\\nThis phase includes inviting guests to visit the program, enjoy it and talk a few words regarding the program. Guests are of high status who have achieved something great. They are to give blessings to the performers. Include various musical Guru\'s as guests will inspire the performers to achieve more. Performers will feel happy, great and inspired when they receive momentoes from the guests.\\n\\n### Invitation\\n\\nMaking an invitation is crucial for others to know about the event. This phase includes inviting others to the event through invitation cards (physical/virtual), banners, web pages, etc. It also helps the performs cheer up to perform well.\\n\\n### Anchoring\\n\\nChoose the anchor by either hiring an external anchor or arranging someone to host the event. They will be speaking about the program from the introduction to the conclusion. Preparing such that anchor conveys the event precisely can be considered as this phase.\\n\\n### Mementos\\n\\nThis phase contains arranging (ordering) the mementoes or other appreciations to performers, guests and others who have helped behind the screens. Awarding mementoes is to appreciate them with the effort they have made for the program. And also to keep them as a symbol of the event.\\n\\n\\n### Photos and Videos\\n\\nHire (or arrange) a photographer and videographer in this phase. It helps keep the event as a copy (memory) for further reference. It also helps in sharing to the press & media or social media after the performance.\\n\\n# Performance\\n\\n![Still from a Performance](./performance.JPG)\\n\\n*Still from a Performance*\\n\\nThis phase is the day of the performance where all the above tasks merge and come to light. From the rise to the close of the curtain, the entire program is in the span of 2 or 3 hours. It marks the glory that has taken a lot of effort to organize such an event.\\n\\nThe things which are in this phase is not just the dance performance. It includes the following:\\n\\n### Pre Dance Performance\\n\\nBefore the dance performance includes the following:\\n1. The performers get ready in their costumes along with make-up.\\n2. Arrange food/snacks for the program to have enough stamina.\\n3. Set the stage with all visual effects.\\n4. Test the audio/visual output.\\n5. Receive Guests.\\n6. Welcome the audience.\\n\\n### During Dance Performance\\n\\nDuring the dance performance includes the following: (behind)\\n1. Arrange the performers in their order of entry/exit onto the stage.\\n2. Provide guests with snacks or drinks.\\n3. Change the audio/visual effects depending on the dance scenario.\\n4. Change costumes/make-up for performers with many roles.\\n5. Recording of photos and videos.\\n6. Live stream the program (if possible).\\n7. Provide details to press & media (whoever comes).\\n8. Arrange for the momentoes and any other gifts while awarding.\\n\\n### Post Dance Performance\\n\\nAfter the dance performance includes the following:\\n1. To make sure all the participants, guests reach their respective places safely.\\n2. To collect the photos and videos from Cameramen.\\n3. To share the pictures, content to the press & media for press coverage.\\n4. To share highlights of the program on social media.\\n\\nConcluding this starts planning and preparation for the next program. \ud83d\ude0f\\n\\n# Conclusion\\n\\nThe blog is not just for Bharatanatyam but will also be similar in other programs. It intends to convey the effort taken and recognize such programs, also is for people to realize the tasks before organizing a program and have a proper checklist. The whole blog might not cover all the aspects but include major things done while organizing a program. All the above provided might somewhat look small in writing but takes a lot of effort behind.\\n\\n__Note:__ All the pictures and the content are owned by [Radha Nrutya Nilayam][website].\\n\\n[website]: http://www.radhanruthyanilayam.com/"},{"id":"2021/flutter-post-caching","metadata":{"permalink":"/blog/2021/flutter-post-caching","source":"@site/blog/2021-08-12-flutter-post-caching/index.md","title":"Flutter Caching with POST Web Api","description":"If you want to cache web API\'s in your flutter project, then follow this blog.","date":"2021-08-12T12:32:00.000Z","formattedDate":"August 12, 2021","tags":[{"label":"Flutter","permalink":"/blog/tags/flutter"},{"label":"Tech","permalink":"/blog/tags/tech"},{"label":"Open-Source","permalink":"/blog/tags/open-source"}],"readingTime":2.735,"hasTruncateMarker":true,"authors":[{"name":"Sai Rajendra Immadi","title":"Flutter Developer","url":"https://github.com/immadisairaj","imageURL":"https://github.com/immadisairaj.png","key":"immadisairaj"}],"frontMatter":{"slug":"2021/flutter-post-caching","title":"Flutter Caching with POST Web Api","date":"2021-08-12 12:32:00 +0530","tags":["Flutter","Tech","Open-Source"],"authors":["immadisairaj"],"comments":true},"prevItem":{"title":"Effort Behind a Dance Program","permalink":"/blog/2021/effort-behind-a-dance-program/"},"nextItem":{"title":"Power of Mistakes","permalink":"/blog/2020/mistakes/"}},"content":"If you want to cache web API\'s in your flutter project, then follow this blog.\\n\\n\x3c!--truncate--\x3e\\n\\n### flutter_cache_manager\\n\\nCaching a normal GET request has been made simple using the package [flutter_cache_manager][flutter_cache_manager].\\n\\n```dart\\nvar file = await DefaultCacheManager().getSingleFile(url);\\n```\\n\\nBy simply using the above command, the data in the request will be retrieved from the cache (if present), else will be retrieved from the URL by storing in the cache.\\n\\n### POST API with flutter_cache_manager\\n\\nWhat will happen when there is a POST request which you want to cache in a flutter application?\\n\\n[flutter_cache_manager][flutter_cache_manager] does not provide option to send a POST request and cache. So, the following steps will help you in caching the POST request in your flutter application.\\n\\n## Steps to Cache\\n\\n### Assumptions\\n\\nFor the steps, I will assume that to get data, a POST request is needed which has form data as input and HTML as output.\\n\\nThe solution which I provide can be edited as needed and used for different cases.\\n\\n```dart\\nExample base URL: \\"https://a.com/send-form-data\\"\\n\\nExample form data:\\nvar data = new Map<String, dynamic>();\\ndata[\'name\'] = \\"Name\\";\\ndata[\'id\'] = \\"xxx\\";\\n```\\n\\n### URL string\\n\\nAs the base URL to get the data is always the same (`https://a.com/send-form-data`), we can use the form data to create a unique URL that can be used as a key URL for caching the data retrieved.\\n\\nAn example unique URL can be of the following:\\n```\\nhttps://a.com/send-form-data?name=\\"Name\\"&id=\\"xxx\\"\\n```\\nHere, we are appending the form data similar to the parameters and making it unique. You can use other methods also to make the link unique.\\n\\n### Packages Needed\\n\\n- For caching the data, we will be using [flutter_cache_manager][flutter_cache_manager].\\n- For sending POST requests, we will be using [http][http]\\n\\nMake sure you add packages in `pubspec.yaml` and import the packages before using them\\n\\n```dart\\nimport \'package:flutter_cache_manager/flutter_cache_manager.dart\';\\nimport \'package:http/http.dart\' as http;\\n```\\n\\n### Caching POST data\\n\\nBy using the below code, you can easily cache the POST data.\\n```dart\\nimport \'dart:typed_data\'; // import for Unit8List\\n\\n// [baseUrl] is the base url to get the POST data\\n// [finalUrl] is the unique url used as key for caching\\n// [formData] is the form data to be requested\\n_getData(String baseUrl, String finalUrl, Map<String, dynamic> formData) async {\\n  // Considering the response as String\\n  String tempResponse = \'\';\\n  // checks if the file exists in cache\\n  var fileInfo = await DefaultCacheManager().getFileFromCache(finalUrl);\\n  if (fileInfo == null) {\\n    // get data from url if not present in cache\\n    http.Response response;\\n    try {\\n      response = await http\\n          .post(Uri.parse(baseUrl), body: formData);\\n    } on SocketException catch (_) {\\n      // TODO: Handle Exception\\n    }\\n    tempResponse = response.body;\\n\\n    // put data into cache after getting from internet\\n    List<int> list = tempResponse.codeUnits;\\n    Uint8List fileBytes = Uint8List.fromList(list);\\n    DefaultCacheManager().putFile(finalUrl, fileBytes);\\n  } else {\\n    // get data from file if present in cache\\n    tempResponse = fileInfo.file.readAsStringSync();\\n  }\\n  _parseData(tempResponse);\\n}\\n```\\nSteps Happening:\\n- By using the [http] package, we send the POST request and get the HTTP response.\\n- Using the response, we convert the type of response and put the file into cache using [flutter_cache_manager].\\n- From next time when the method is called with the same unique URL, it retrieves the data from the cache.\\n\\nWe have successfully made the caching happen for POST requests..\\nHappy Caching!!\\n\\n[flutter_cache_manager]: https://pub.dev/packages/flutter_cache_manager\\n[http]: https://pub.dev/packages/http"},{"id":"2020/mistakes/","metadata":{"permalink":"/blog/2020/mistakes/","source":"@site/blog/2020-12-30-mistakes/index.md","title":"Power of Mistakes","description":"mistake /m\u026a\u02c8ste\u026ak/ : an act or judgement that is misguided or wrong.","date":"2020-12-30T16:42:00.000Z","formattedDate":"December 30, 2020","tags":[{"label":"General","permalink":"/blog/tags/general"}],"readingTime":4.53,"hasTruncateMarker":true,"authors":[{"name":"Sai Rajendra Immadi","title":"Flutter Developer","url":"https://github.com/immadisairaj","imageURL":"https://github.com/immadisairaj.png","key":"immadisairaj"}],"frontMatter":{"slug":"2020/mistakes/","title":"Power of Mistakes","date":"2020-12-30 16:42:00 +0530","tags":["General"],"authors":["immadisairaj"],"comments":true,"image":"./robots.jpg"},"prevItem":{"title":"Flutter Caching with POST Web Api","permalink":"/blog/2021/flutter-post-caching"},"nextItem":{"title":"Journey with Chapel","permalink":"/blog/2020/journey-with-chapel/"}},"content":"mistake /m\u026a\u02c8ste\u026ak/ : an act or judgement that is misguided or wrong.\\n\\nA mistake can be taken in two ways, either the one which helps you or the one which hinders you. What you choose it to be will be the one to lead you. I will be going through a few points which will give you some insights on what my thoughts are.\\n\\n\x3c!--truncate--\x3e\\n\\n### What would happen if mistakes didn\'t exist?\\n\\n![Robots](./robots.jpg)\\n\\n*Humans become robots? [(Image Source)][robots-source]*\\n\\nImagine a city with a lot of roads and has many cars moving. Let\'s say all these cars are from a single company and not operated by humans, but have their whole mind in some remote place and all of them are in sync that they maintain every rule on the road.\\n\\nDoesn\'t it look like machines taking over everything? That is how it might be when no mistake exists. It would feel like everything is perfect.\\n\\n- There would be no accidents\\n- There would be no war\\n- There would be no diseases\\n- There would be no bullying\\n  ..... and the list continues\\n\\nThere are many advantages to this. But, does it make one a human? does it make one a machine? The answer is no for both because there is nothing perfect, it includes machines too.\\n\\nIf you are the one who believes machines make no mistakes, then ask yourself if you ever faced any trouble with a machine? The answer would be yes.\\n\\nLet\'s remember a famous Quote **\\"There is nothing known as Perfect\\"** - Albert Einstein\\n\\nDoes it mean we just have to keep making mistakes? It\'s partially Yes and partially No.\\n\\n### Making mistakes\\n\\nThere are many examples on our daily basis of the mistakes we make. Below are some of the mistakes I have encountered.\\n\\n- Forget a \\";\\" while writing a code\\n- Connecting mobile to the charger and not switching it on\\n- Hitting car to some vehicle\\n- Sending mail to a wrong person\\n- Making a Maggi without sufficient water\\n- Wearing shoe without socks\\n- Being late to class\\n  ..... and many more\\n\\nThe list keeps on going if we sit and write our mistakes because they come in many sizes and many forms.\\n\\nThe above points show us that most people makes mistakes. Then why should we have to worry about our mistakes? The answer lies in the very mistake itself.\\n\\nThe mistakes are the one which teaches you which path you have to take. These questions might answer it.\\n\\n- Did you learn to walk without falling?\\n- Did you learn to drive without hitting another vehicle?\\n- Did you learn to swim without drowning?\\n- Did you learn to dance without missing the beat?\\n- Did you learn to play games without losing?\\n\\nAnswer to all of the questions will be \\"No\\". It is because one learns something every time they make a mistake.\\n\\n### Learning from our mistakes\\n\\nThere is an example which happens most of the times when your parents ask you not to do something (the one which you didn\'t know before), you will of course plan on doing the same thing. It is because you want to experience that too, then learn from it.\\n\\nThis happens because when you make a mistake, it is an experience for you which you will never forget and you learn quickly from it. Next time you get the same problem, you know what to do.\\n\\nThere is a quote where my friend uses it many times - **\\"Life is all about Experiences\\"**\\n\\nIt precisely says that whatever experience we face in our life will make us better. One makes a mistake, it is an experience. One does not make a mistake, it is still an experience. You learn from whatever you do, whether it be a mistake or no. It all depends on one\'s decision whether to be depressed on something which went wrong or whether to learn from their mistake and keep growing.\\n\\n### Do every mistake(known/unknown)?\\n\\nYou might think, we have to make a mistake to learn something. But, the answer is \\"No\\". To demonstrate it, let\'s take an example. What if someone says \\"Don\'t jump from the top of the building, you might get hurt\\", we don\'t right away rush to the top of the building and jump as to get an experience. Because we know that we might as well be dead if we do that. That was not an experience, but how did we learn it? It was of course an experience, but someones. This is an example of you learning from others mistakes.\\n\\nThis very well explains the question that we don\'t have to make every mistake to learn from it.\\n\\nThe above example doesn\'t end here yet. What if a person wants to jump from a top of the building or even from much more altitude? There wouldn\'t be any invention of a **\\"Parachute\\"** if this thought would not have crossed one\'s mind. Just getting the thought was not enough, it was successful after many failures(caused by mistakes). In the end, it depends on how one makes good use of the mistakes.\\n\\nThere would be nothing you are seeing around, if not for mistakes. So, keep making mistakes and learn from them.\\n\\nI would like to conclude this by giving a statement.\\n\\n**\\"Yes, you made a mistake, but it\'s okay; nobody\'s perfect\\"**\\n\\n[robots-source]: https://www.lucarobotics.com/blog/best-robots-in-the-world"},{"id":"2020/journey-with-chapel/","metadata":{"permalink":"/blog/2020/journey-with-chapel/","source":"@site/blog/2020-10-23-journey-with-chapel/index.md","title":"Journey with Chapel","description":"Starting from nothing to having great experiences with Chapel-language. Here is my Journey with Chapel!.","date":"2020-10-23T12:42:00.000Z","formattedDate":"October 23, 2020","tags":[{"label":"Tech","permalink":"/blog/tags/tech"},{"label":"Open-Source","permalink":"/blog/tags/open-source"}],"readingTime":5.8,"hasTruncateMarker":true,"authors":[{"name":"Sai Rajendra Immadi","title":"Flutter Developer","url":"https://github.com/immadisairaj","imageURL":"https://github.com/immadisairaj.png","key":"immadisairaj"}],"frontMatter":{"slug":"2020/journey-with-chapel/","title":"Journey with Chapel","date":"2020-10-23 12:42:00 +0530","tags":["Tech","Open-Source"],"authors":["immadisairaj"],"comments":true},"prevItem":{"title":"Power of Mistakes","permalink":"/blog/2020/mistakes/"},"nextItem":{"title":"Google Analytics with Flutter Web","permalink":"/blog/2020/google-analytics-with-flutter-web/"}},"content":"Starting from nothing to having great experiences with [Chapel-language][chapel-lang]. Here is my Journey with Chapel!.\\n\\n\x3c!--truncate--\x3e\\n\\n## Selection of the Organization\\nI had already contributed to an open-source organization previously. But, that was the initial start of my open-source contribution and was not able to contribute much. This time I planned to contribute to an organization where I can get more exposure into some deep computer concepts.\\n\\nI was going through Google Summer of Code websites to search for an organization of the choice, and after going through a lot of organizations and the projects they are doing, I found the Chapel language very interesting and thought it could give me some knowledge and sharpen my skills. My interest in parallel and distributed computing also was a reason why I choose the organization to start contributing.\\n\\nEven I choose the organization, I was not so sure if I would solve any potential problems and contribute to the organization. Contributing to this organization was also going to be the first open-source organization to test and prove what I have learnt from my previous (first) contribution. I knew this was going to be a big challenge for me while I could still contribute to an organization which has a project of the skills I already know, but still, I somewhat felt like contributing to Chapel.\\n\\nIf you want to know more about Chapel, you can dive into [this][chapel-lang] link.\\n\\n### How I started to Contribute\\n\\nAccording to the organization rules, if we want to contribute to the organization, we should fill out an agreement for which you have to stick on later on while contributing to the organization. I took my time reading the license and also went through all the contributing guidelines provided on the organization website. I had started to write a few chapel programs and started trying to understand how the language syntax is and also learnt the basics of how to work with multi-locales. This took me a long time than expected, and later someday I had filled the Contribution License Agreement and mailed as guided in their website. The same day after a few hours, I had received a mail stating I am officially invited as a contributor to contribute to the chapel-language. I was very excited and also had introduced myself in gitter and through the mail.\\n\\n### Contributions\\n\\nI still remember the first issue I took up was an issue causing block comment being blocked by single line comment while making documentation. I had tried going through the code a lot and also have messed up the whole code and had to pull the code, again and again, I had a nice experience in trying to solve my first issue. After some long time like 20 days, I was able to come up with a solution which could solve the problem. I had created my first pull request for that problem, searched for another issue and started working on it right away. The second issue I claimed was to add a new flag for the documentation generation. After started to work on it, for my surprise, my first issue was still hanging and I was still figuring a way to work on it. I had been trying to solve both the issues and after some long days, I was able to send a pull request for my second issue too. But, they were still not approved and merged. I had been asking questions and getting clarifications on the defaults and the tests. Later after trying a lot, my second issue got merged before my first issue got merged. I was very happy to see the code I have contributed present in their source code. The feeling was very good when I solved some problem (it may be even small issue) and see my code there. I started claiming more issues, working around them, communicating with the organization members and was able to solve a few potential problems which might not be huge. I am still happy till date that every code I have contributed is not left out and was merged into the chapel-lang source code.\\n\\nMy contributions - [link][contributions]\\n\\n### My Journey towards Google Summer of Code\\n\\nThe chapel language was going to mentor for the Google Summer of Code 2020 too, I was very happy and went through their projects page and from which I choose \\"Chapel I/O Performance\\". I had different options of projects to choose from, there were easy projects to do and even difficult projects too. But, I still wanted to stick on to this project as this might give me an experience on how and where my limits were. I wanted to step out of my comfort zone and started trying my best to know about the performance of the languages, comparing them with chapel and also have read a few papers based on them. It was a confusing topic for me to choose and I was not sure at the beginning that I would be able to crack it. I had slowed down my contributions to the chapel and put my focus on preparing the project proposal. After working for months, I was able to finish my proposal with few implementations in my mind and a few of the different benchmarks of the languages. This was when I got confidence that I will surely be selected to work on this project this year. I was eagerly waiting for the results to come out, it was a 50:50 chance for me to get selected, but, in the end after the results came out, I was not selected for the Google Summer of Code programme. I was not worried that I was not selected instead felt happy for all the contributions I did gave me a lot of knowledge and a lot of experience which I couldn\'t get before. I also knew my mistakes why I didn\'t get into the programme, it was because I was still hesitant to communicate freely in the organization. It was a sign that I should improve my communication skills more and more.\\n\\nDue to some reasons, I had stopped (or paused) my contributions to the chapel. Even then, I had attended a few sessions conducted by Chapel and am still trying to keep myself update of the chapel progress. This language has amazed me by how it is growing daily.\\n\\nI really would like to thank the guides from Chapel who have mentored me throughout the journey and also would like to thank the founder of the club \\"[amFOSS][amfoss]\\", my seniors in the club, my peers in the club who helped me in contributing to a wonderful organization. I had gained a lot of knowledge despite my failure in Google Summer of Code 2020.\\n\\nI will say it as not my failure, but a step in my life which made me grow either be technical or non-technical aspects.\\n\\n[chapel-lang]: https://chapel-lang.org/\\n[contributions]: https://github.com/chapel-lang/chapel/pulls?q=is%3Apr+author%3Aimmadisairaj\\n[amfoss]: https://amfoss.in/"},{"id":"2020/google-analytics-with-flutter-web/","metadata":{"permalink":"/blog/2020/google-analytics-with-flutter-web/","source":"@site/blog/2020-06-11-google-analytics-with-flutter-web/index.md","title":"Google Analytics with Flutter Web","description":"Want to add Google Analytics to your flutter web application? Then, this blog is for you.","date":"2020-06-11T16:26:00.000Z","formattedDate":"June 11, 2020","tags":[{"label":"Flutter","permalink":"/blog/tags/flutter"},{"label":"Google-Analytics","permalink":"/blog/tags/google-analytics"},{"label":"Tech","permalink":"/blog/tags/tech"},{"label":"Open-Source","permalink":"/blog/tags/open-source"}],"readingTime":2.93,"hasTruncateMarker":true,"authors":[{"name":"Sai Rajendra Immadi","title":"Flutter Developer","url":"https://github.com/immadisairaj","imageURL":"https://github.com/immadisairaj.png","key":"immadisairaj"}],"frontMatter":{"slug":"2020/google-analytics-with-flutter-web/","title":"Google Analytics with Flutter Web","date":"2020-06-11 16:26:00 +0530","tags":["Flutter","Google-Analytics","Tech","Open-Source"],"authors":["immadisairaj"],"comments":true,"image":"./flutter-google-analytics.png"},"prevItem":{"title":"Journey with Chapel","permalink":"/blog/2020/journey-with-chapel/"},"nextItem":{"title":"Port The Blog","permalink":"/blog/2020/port-the-blog/"}},"content":"Want to add Google Analytics to your flutter web application? Then, this blog is for you.\\n\\nI didn\'t find any direct methods to add google-analytics to my flutter-web application while I was searching. I\'ve managed to integrate it successfully by referring to different blogs. So, I am writing this blog to make it easier.\\n\\n![Flutter + Google Analytics](./flutter-google-analytics.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## Steps to be followed\\n\\n### Create Google Analytics\\n\\nGo to [analytics.google.com][analytics] and login with your account. Then, create a new property with your website domain linked. Now, go to `Admin -> Property -> Tracking Info -> Tracking Code` and keep the *Tracking ID* noted. (It looks something like `UA-XXXXXXXXX-X`)\\n\\n### Add Google Analytics to Flutter Project\\n\\nSo, assuming you have already set-up the flutter-web project.\\n\\nCreate a new file named `app.js` under `/web`. And the copy the below code into it.\\n\\n*Old:*\\n```javascript\\n// Warning: Old method, please prefer the new script (below)\\n// file: /web/app.js\\nfunction sendNavigation(location) {\\n    ga(\'send\', \'pageview\', location);\\n}\\n```\\n\\n*New:*\\n```javascript\\n// file: /web/app.js\\nfunction sendNavigation(location) {\\n    // Replace UA-XXXXXXXXX-X with Google Analytics ID\\n    gtag(\'config\', \'UA-XXXXXXXXX-X\', { page_path: location });\\n}\\n```\\n\\nYou might already have a file `/web/index.html`. Add the following into the *html* file inside `<head>` and `</head>`.\\n\\n*Old:*\\n```html\\n\x3c!-- Warning: Old method, please prefer the new script (below) --\x3e\\n\x3c!-- file: /web/index.html --\x3e\\n<head>\\n    \x3c!-- ... --\x3e\\n    <script>\\n        (function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){\\n        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\\n        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\\n        })(window,document,\'script\',\'https://www.google-analytics.com/analytics.js\',\'ga\');\\n\\n        // Replace UA-XXXXXXXXX-X with Google Analytics ID\\n        ga(\'create\', \'UA-XXXXXXXXX-X\', \'auto\');\\n        ga(\'send\', \'pageview\');\\n    <\/script>\\n    \x3c!-- ... --\x3e\\n    <script src=\\"app.js\\" defer><\/script>\\n</head>\\n```\\n\\n*New:*\\n```html\\n\x3c!-- file: /web/index.html --\x3e\\n<head>\\n    \x3c!-- ... --\x3e\\n    \x3c!-- Replace UA-XXXXXXXXX-X with Google Analytics ID --\x3e\\n    <script async src=\\"https://www.googletagmanager.com/gtag/js?id=UA-XXXXXXXXX-X\\"><\/script>\\n    <script>\\n      window.dataLayer = window.dataLayer || [];\\n      function gtag(){dataLayer.push(arguments);}\\n      gtag(\'js\', new Date());\\n\\n      // Replace UA-XXXXXXXXX-X with Google Analytics ID\\n      gtag(\'config\', \'UA-XXXXXXXXX-X\', { send_page_view: false });\\n    <\/script>\\n    \x3c!-- ... --\x3e\\n    <script src=\\"app.js\\" defer><\/script>\\n</head>\\n```\\n\\nAfter adding this, you can have the Google-Analytics running. But, there is a small error you might face and which is, the whole website which has different pages be tracked under the same page `/` and it is because the whole flutter web project is being built on the root. So, the navigation pages would have something like `/#/<route>`. So, the Google-Analytics doesn\'t track those pages due to `#` coming in between. But, fear not, I might just have a fix for it.\\n\\nI am assuming that you are using named navigation to navigate different pages.\\n\\nThe following might be the code you are already having. and I have few comments there to just add what all lines are needed.\\n```dart\\n// example file: /lib/home.dart\\n\\nimport \'package:flutter/material.dart\';\\nimport \'dart:js\' as js;     // add this line if you don\'t have one\\n\\nclass Home extends StatelessWidget {\\n  const Home({Key key}) : super(key: key);\\n\\n  static const String route = \'/\'; // add this line if you don\'t have one\\n  \\n  @override\\n  Widget build(BuildContext context) {\\n    js.context.callMethod(\'sendNavigation\', [route]);   // add this line\\n    return Scaffold(/* ... */);\\n  }\\n}\\n```\\nThe above code is an example for Home page. If you want to track other pages, have the same code added to the other pages as well. Now, you will be having all your pages tracking in Google-Analytics.\\n\\n**Note:** You need to look that all the pages tracked, but this tracking will not contain `#` in them. For example, `/#/<route>` will be tracked as `/<route>`.\\n\\nIf you want to look into an example of how I integrated Google-Analytics into my Flutter Web Application. [Here][commit] is the commit of the google-analytics integration.\\n\\n[analytics]: https://analytics.google.com\\n[commit]: https://github.com/immadisairaj/CarouselPortfolio/commit/51f4e0b918a6965083e6ad687e46d27bf2326336"},{"id":"2020/port-the-blog/","metadata":{"permalink":"/blog/2020/port-the-blog/","source":"@site/blog/2020-06-11-port-the-blog/index.md","title":"Port The Blog","description":"This blog tells why and how I have ported my blog from WordPress to Jekyll hosted in GitHub.","date":"2020-06-11T12:07:00.000Z","formattedDate":"June 11, 2020","tags":[{"label":"Blog","permalink":"/blog/tags/blog"},{"label":"Tech","permalink":"/blog/tags/tech"},{"label":"Open-Source","permalink":"/blog/tags/open-source"}],"readingTime":3.285,"hasTruncateMarker":true,"authors":[{"name":"Sai Rajendra Immadi","title":"Flutter Developer","url":"https://github.com/immadisairaj","imageURL":"https://github.com/immadisairaj.png","key":"immadisairaj"}],"frontMatter":{"slug":"2020/port-the-blog/","title":"Port The Blog","date":"2020-06-11 12:07:00 +0530","tags":["Blog","Tech","Open-Source"],"authors":["immadisairaj"],"comments":true},"prevItem":{"title":"Google Analytics with Flutter Web","permalink":"/blog/2020/google-analytics-with-flutter-web/"},"nextItem":{"title":"Git with Open-Source","permalink":"/blog/2019/git-with-open-source/"}},"content":"This blog tells why and how I have ported my blog from WordPress to Jekyll hosted in GitHub.\\n\\n\x3c!--truncate--\x3e\\n\\n### Did I like WordPress?\\n\\nYes, I liked the WordPress blogging site. I had chosen the free version of the site as I was, however, using it to blog. The site had all the custom templates and even have enough storage. I didn\'t even need to change the code inside if I had to any customizations, everything was dynamic and pretty handy. I also had few blogs hosted there, and now I don\'t update it anymore. You can check out the site [here][wordpress].\\n\\n### Personal Website\\n\\nInitially, I only had a single website only for blogging though I didn\'t blog much. I had a thought of having my website of my own to show-off my skills. I had forked few of the projects before and tried hosting them in my GitHub Page, I didn\'t like any and deleted the repository. So, as I have specialization in Flutter but didn\'t build any *flutter-web* projects, I thought of giving it a try and started building a personal portfolio which looks simple and minimal. The project was done as I expected with minimal UI, though it took time to build it. You can check the project [here][portfolio].\\n\\nNow I have a personal website hosted in GitHub Pages and also a blog hosted in WordPress which has redirection from both sides.\\n\\n### Inspiration to port the Blog\\n\\nI was happy with both the personal website and blog I had. But something was bothering me, which is, both the sites have a different domain. Few of my friends have taken up Jekyll free templates and had their blog sites set up in their GitHub Pages. I had a small doubt that if I can have a complete Jekyll project in a sub-directory inside my website build so both my blog and the personal website would come under the same domain. I started searching in google if I can have a complete website in a sub-directory and after reading many blogs finally got an exact blog which suited my requirement.\\n\\n### Why Did I choose to port the Blog?\\n\\nSo, before starting to port the blog I had some queries in my mind if that was the right choice or not. I think most of them also might have the same queries if they are planning to port their blogging site. I think mentioning the queries maybe are not helpful, but I had a few reasons why I ported the blog.\\n- As already said, both the sites can come under the same domain\\n- I can write blog posts in markdown\\n- A static site and no special database\\n- Comments: Have a Disqus platform for it\\n- Site Tracking: Have Google-Analytics integration\\n\\nSo, who does not want to port if I have all the requirements and just missing the first point?\\n\\n### How Did I port the Blog?\\n\\nI had searched for a few free Jekyll templates which suit my taste and includes all that I need and found out a theme [Jekyll-Uno][jekyll-uno]. I downloaded the project and made all the customizations whatever I needed, it took a bit of time as that template was last updated 2 years back and also didn\'t have proper documentation on how to customize. So, I finished having my blogging website ready to deploy. But, how do I link it in sud-directory of the personal website and have it running? As I told earlier, I found a hack to do that, and you can find all the detailed instruction in the *README* file of [this][personal-site] repository.\\n\\nNow, I had both the sites under a single domain and this is the very first blog I am writing after I had ported the blog.\\n\\nEdit: I now shifted my blogging site to [Docusaurus][docusaurus]. (which is the current blog)\\n\\n[wordpress]: https://immadisairaj.wordpress.com\\n[portfolio]: https://github.com/immadisairaj/Portfolio\\n[jekyll-uno]: https://github.com/joshgerdes/jekyll-uno\\n[personal-site]: https://github.com/immadisairaj/immadisairaj.github.io\\n[docusaurus]: https://docusaurus.io/docs/blog"},{"id":"2019/git-with-open-source/","metadata":{"permalink":"/blog/2019/git-with-open-source/","source":"@site/blog/2019-02-24-git-with-open-source/index.md","title":"Git with Open-Source","description":"Here in this blog, I will be giving an overview of using the git version control system while contributing to open-source projects.","date":"2019-02-24T18:00:00.000Z","formattedDate":"February 24, 2019","tags":[{"label":"Tech","permalink":"/blog/tags/tech"},{"label":"Open-Source","permalink":"/blog/tags/open-source"}],"readingTime":4.505,"hasTruncateMarker":true,"authors":[{"name":"Sai Rajendra Immadi","title":"Flutter Developer","url":"https://github.com/immadisairaj","imageURL":"https://github.com/immadisairaj.png","key":"immadisairaj"}],"frontMatter":{"slug":"2019/git-with-open-source/","title":"Git with Open-Source","date":"2019-02-24 18:00:00 +0530","tags":["Tech","Open-Source"],"authors":["immadisairaj"],"comments":true},"prevItem":{"title":"Port The Blog","permalink":"/blog/2020/port-the-blog/"},"nextItem":{"title":"KWoC Experience as a Mentor","permalink":"/blog/2019/kwoc-experience/"}},"content":"Here in this blog, I will be giving an overview of using the **git version control system** while contributing to *open-source projects*.\\n\\n\x3c!--truncate--\x3e\\n\\n### Forking and Cloning a repo into your local system\\n\\nInitially, choose an open-source project on the domain of your interest for which you would like to contribute. Let the project repository be \u201c*project-repo*\u201c.\\n\\nGo to the project-repo site in GitHub. Click the **Fork** button which is located in the top right corner. This action forks the project to your GitHub account. Let\u2019s call it the \u201c*account-repo*\u201c.\\n\\nNow direct to a folder in your machine where you want to clone the repo. Open the terminal in that folder. Now before going to next step make sure there is git installed in your machine. If not you can download it from [this][git-download] link.\\n\\n`$ git clone https://github.com/<username>/<project-name>.git`\\n\\nUse this command to clone the project in your local machine. Here *username* is your GitHub handle and project-name is the project you are going to contribute.\\n\\nLet this repo be \u201c*local-repo*\u201c.\\n\\n`$ cd <project-name>`\\n\\nNow you have a link between *local-repo* and *account-repo* as \u201c**origin**\u201c. You also need to add the *project-repo*. You can do by the following command.\\n\\n`$ git remote add upstream https://github.com/<company-name>/<project-name>.git`\\n\\nHere *company-name* is the handle of the *project-repo* and *project-name* is the name of the project.\\n\\nThis you have a link between local-repo and project-repo as \u201cupstream\u201c.\\n\\nYou can check the remote repo\u2019s of your *local-repo* by\\n\\n`$ git remote -v`\\n\\nNow you can pull the updated project of the *project-repo* into your *local-repo*.\\n\\n`$ git pull upstream <branch> --rebase`\\n\\nHere *branch* is the branch name you want to pull. It will be \u201cdevelopment\u201d for most of the Open-Source projects. And now you can push the changes from local-repo to account-repo.\\n\\n`$ git push origin <branch>`\\n\\nThis can be done every time you start working for the day. And make sure you are in the proper branch while you do this. You can check your branch by\\n\\n`$ git branch`\\n\\nNow you have all set for working on the project without any issues.\\n\\n### Working on the project\\n\\nYou find some issue and want to work on it. So, the first thing you do is create a new branch for working on the issue. You can create a new branch by\\n\\n`$ git branch <new-branch-name>`\\n\\nHere *new-branch-name* can be anything you give name related to the issue.\\n\\nAfter creating a new branch you should check out to that branch to work on the issue. It can be done by\\n\\n`$ git checkout <branch-name>`\\n\\nHere *branch-name* is the name of the branch which you want to work on.\\n\\nWhile you are working you can save your changes so if it is disturbed by any mistake then you can get it back. You can save like\\n\\n`$ git add -A`\\n\\nor\\n\\n`$ git add <file-name>`\\n\\nHere you are staging the files you change. The changes can be looked at by\\n\\n`$ git status`\\n\\nNow you can directly commit if you feel this is what to be saved by using\\n\\n`$ git commit -m \\"<commit-message>\\"`\\n\\nHere *commit-message* can be related to what you\u2019ve worked on.\\n\\nAfter this process when you want to push the changes to *account-repo* then\\n\\n`$ git push -u origin <branch-name>`\\n\\nif the branch is not present in your *account-repo*\\n\\nor\\n\\n`$ git push origin <branch-name>`\\n\\nif the branch is present in your *account-repo*\\n\\nNow you can check your updated *account-repo* and send a PR for the issue you worked on.\\n\\n### Playing with git\\n\\n#### You can check your commits in a particular branch by\\n\\n`$ git log`\\n\\nYou can add \u201c*\u2013oneline*\u201d to the command if you want the commits in one line.\\n\\nYou can add \u201c*\u2013all*\u201d to the command if you want to see all the commits.\\n\\nYou can add \u201c*\u2013graph*\u201d to the command to see the commits in a graph style.\\n\\n`$ git log --oneling --all --graph`\\n\\n \\n#### If you have some changes and want to add to the previous commit or change the commit message of the previous commit. Then you have to stage the changes then\\n\\n`$ git commit --amend`\\n\\n\\n#### You can check all your recent activities by using\\n\\n`$ git reflog`\\n\\n\\n#### You can revert your work to a specific commit and work again by using\\n\\n`$ git revert <some-commit>`\\n\\nHere *some-commit* is the name of the commit you want to go back or if you want to use the position you can use \u201cHEAD~$position\u201d replace the $position  with the point where you want to go back.\\n\\n\\n#### You can even delete your commit or any activity by referring to the history of what you did.\\n\\n`$ git reset <type> <some-commit>`\\n\\nHere type can be \u201c*\u2013hard*\u201d or \u201c*\u2013soft*\u201d based on you want to completely change the working tree or want to keep it as it is.\\n\\n\\n#### You can show the same changes of your local-repo into your account-repo even if it is completely different by force pushing\\n\\n`$ git push -f origin <branch-name>`\\n\\n\\n#### If you want to squash some commits into one then one of the ways which you can use is\\n\\n`$ git rebase -i <some-commit>`\\n\\nThen you can choose which commit to squash and which to pick and finally can edit the commit message.\\n\\n\\nThere are even many more things you can learn about \u201c**git**\u201c. You can go through [this][git-link] link.\\n\\n[git-download]: https://git-scm.com/downloads\\n[git-link]:     https://git-scm.com/docs/"},{"id":"2019/kwoc-experience/","metadata":{"permalink":"/blog/2019/kwoc-experience/","source":"@site/blog/2019-01-15-kwoc-experience/index.md","title":"KWoC Experience as a Mentor","description":"About KWoC","date":"2019-01-15T18:00:00.000Z","formattedDate":"January 15, 2019","tags":[{"label":"Android","permalink":"/blog/tags/android"},{"label":"Tech","permalink":"/blog/tags/tech"},{"label":"Open-Source","permalink":"/blog/tags/open-source"}],"readingTime":3.265,"hasTruncateMarker":true,"authors":[{"name":"Sai Rajendra Immadi","title":"Flutter Developer","url":"https://github.com/immadisairaj","imageURL":"https://github.com/immadisairaj.png","key":"immadisairaj"}],"frontMatter":{"slug":"2019/kwoc-experience/","title":"KWoC Experience as a Mentor","date":"2019-01-15 18:00:00 +0530","tags":["Android","Tech","Open-Source"],"authors":["immadisairaj"],"comments":true,"image":"./after.jpg"},"prevItem":{"title":"Git with Open-Source","permalink":"/blog/2019/git-with-open-source/"},"nextItem":{"title":"Java","permalink":"/blog/2018/java/"}},"content":"### About KWoC\\n\\nFirst, you might think what KWoC is. It is **Kharagpur Winter of Code**. It is a 5-week long online programme for the open source developers conducted by open source club at IIT-Kharagpur. This could be helpful for who would participate in **Google Summer of Code** **(GSoC)**.\\n\\n\x3c!--truncate--\x3e\\n\\nYou can know more about KWoC from [here][kwoc].\\n\\n### How I got to know about KWoC\\n\\nI got to know about this programme from my seniors. They advised me to apply as a mentor as I already have a working project in my GitHub. I went to the KWoC website and registered as a mentor to the project. I didn\u2019t even hope for getting selected for that. Then, at last, got selected into the programme as mentor.\\n\\n### My Project\\n\\n[This][project] is GitHub link of the project. You can go through it.\\n\\nMy project is an Android application named **Quiz**. This uses [Open-Trivia][open-trivia] to get questions.\\n\\n### Experience I had\\n\\nI felt excited when I got to know that I was selected for the programme. Then I started creating Issues for the application. And people who I don\u2019t know approached me through gitter channel asking for how to start to contribute. I gave a briefing on how to start to contribute. When the Coding Period began the people started looking at the issues and started sending PR\u2019s for the project. First, when I received PR I looked into the code and reviewed that and felt happy to merge that. By receiving some amount of PR\u2019s I felt people liked my project.\\n\\nI learned many things through this. The first how to respond to others. I felt different in saying no to the person who asked they would work on it while other is already working but got habituated to that. I sometimes felt difficult in reviewing the PR\u2019s so created a Pull Request Template as I could find it easy to look into it.\\n\\nAs I included Travis-CI, Mergeable to the project I felt it helped. I didn\u2019t even look the code if it didn\u2019t pass these Tests. This made easy for me on reviewing. I felt it would be more easy for me by adding Contributing file also to the project.\\n\\n### What I learned from it\\n\\nAs a **Mentor**, Make sure to have all the files like Description, ReadMe, Contribute, Code of Conduct, License, Pull Request Template, Issue Template. It will not only be useful for the people who contribute to the project but also mentors in reviewing. Merge only PR\u2019s which the project requires. Feel free to communicate with the developers.\\n\\nAssuming as a **Student**, after selecting a project first need to go through the ReadMe and Contribution file then look through the issues in the project and select one which feels good. After this, check if there is someone already working on it and ask whether to work if feel they are not working. Then while working let the commit messages be reasonable. Then before sending the PR, make sure the unnecessary commit messages are squashed and the PR is sent to the branch meant to receive PR\u2019s. Then send a PR based on how the PR template is and wait for the review. After the review is done if any changes suggested, change that and send PR again else it will get merged.\\n\\nWhat I want to tell is Don\u2019t feel bad because your PR is not merged. \u201cPR not merged doesn\u2019t mean you are not good at developing, it means that is not the right thing which is needed for the project\u201d.\\n\\n### Evolution of the Application\\n\\n![Before KWoC](./before.jpg)\\n![After KWoC](./after.jpg)\\n\\n*Above pictures Left: Before, Right: After*\\n\\n### Statistics\\n\\n*PR\u2019s received:* 31\\n\\n*PR\u2019s Merged:* 21\\n\\n*Total Lines Added:* 1788\\n\\n*Total Lines Removed:* 1264\\n\\n*Total Commits:* 32\\n\\nAt last, I thank KWoC in helping me to get the knowledge in Open Source.\\n\\n[kwoc]:         https://kwoc.kossiitkgp.org/\\n[project]:      https://github.com/immadisairaj/Quiz\\n[open-trivia]:  https://opentdb.com/"},{"id":"2018/java/","metadata":{"permalink":"/blog/2018/java/","source":"@site/blog/2018-08-30-java/index.md","title":"Java","description":"What is Java?","date":"2018-08-30T18:00:00.000Z","formattedDate":"August 30, 2018","tags":[{"label":"Java","permalink":"/blog/tags/java"},{"label":"Tech","permalink":"/blog/tags/tech"}],"readingTime":1.4,"hasTruncateMarker":true,"authors":[{"name":"Sai Rajendra Immadi","title":"Flutter Developer","url":"https://github.com/immadisairaj","imageURL":"https://github.com/immadisairaj.png","key":"immadisairaj"}],"frontMatter":{"slug":"2018/java/","title":"Java","date":"2018-08-30 18:00:00 +0530","tags":["Java","Tech"],"authors":["immadisairaj"],"comments":true,"image":"./java.jpg"},"prevItem":{"title":"KWoC Experience as a Mentor","permalink":"/blog/2019/kwoc-experience/"},"nextItem":{"title":"Tabla\u2026. What is it?","permalink":"/blog/2018/tabla-what-is-it/"}},"content":"## What is Java?\\n\\nJava is an *Object Oriented Programming* language that produces software for multiple platforms. It can run on any computer with the help of Java Virtual Machine (JVM). Java is Platform Independent.\\n\\n![Java](./java.jpg)\\n\\n\x3c!--truncate--\x3e\\n\\n## History of Java?\\n\\nThe java project was initiated by *James Gosling*, Mike Sheridan, and Patrick Naughton at Sun Microsystems in June 1991. It was first released in the year 1995. Till now there are many versions released (you can check all the versions [here](https://en.wikipedia.org/wiki/Java_version_history)). Now java is under Oracle as it acquired Sun Microsystems in 2010.\\n\\n## What Java really means?\\n\\nJava is an island of Indonesia. It was the place where the first coffee was made. So, java means Coffee.\\n\\n## What is Java Virtual Machine (JVM)?\\n\\nJava applications are *Write Once Run Anywhere* (WORA). This is possible through JVM. JVM is an engine which provides runtime environment to Java programs and applications. It is a part of Java Runtime Environment (JRE). It has the calibre to compile and run on any Platform this is how Java is Platform Independent.\\n\\n**What is Java Development Kit (JDK)?**\\n\\nJDK is a software development environment which is used for developing Java applications. It includes JRE, java compiler, loader, documentation generator, etc,.\\n\\n## What is Object Oriented Programming (OOP)?\\n\\nIt is programming based on object methodology. These objects are organised into classes. Object-Oriented Programming makes it easier for programmers to structure and organise software programs. Because individual objects can be modified without affecting other aspects of the program. The class is  the data format for a given object. Object is an instance of a class. Java is one of the language which is Object Oriented."},{"id":"2018/tabla-what-is-it/","metadata":{"permalink":"/blog/2018/tabla-what-is-it/","source":"@site/blog/2018-08-21-tabla-what-is-it/index.md","title":"Tabla\u2026. What is it?","description":"Tabla is a Hindustani Musical Instrument. It is a Percussion Instrument.","date":"2018-08-21T18:00:00.000Z","formattedDate":"August 21, 2018","tags":[{"label":"Tabla","permalink":"/blog/tags/tabla"},{"label":"Music","permalink":"/blog/tags/music"}],"readingTime":2.47,"hasTruncateMarker":true,"authors":[{"name":"Sai Rajendra Immadi","title":"Flutter Developer","url":"https://github.com/immadisairaj","imageURL":"https://github.com/immadisairaj.png","key":"immadisairaj"}],"frontMatter":{"slug":"2018/tabla-what-is-it/","title":"Tabla\u2026. What is it?","date":"2018-08-21 18:00:00 +0530","tags":["Tabla","Music"],"authors":["immadisairaj"],"comments":true,"image":"./tabla.jpeg"},"prevItem":{"title":"Java","permalink":"/blog/2018/java/"}},"content":"**Tabla is a Hindustani Musical Instrument. It is a Percussion Instrument.**\\n\\n### Music\\nFirst, you have to know What **Music** is?\\n\\n*Vocal, Instrument, Dance*. All these three together form a Music. Vocal is the Singing part, Instrument gives the flavor to the Song, and last the Dance is where they act according to the Song. This leads to the Music.\\n\\n\x3c!--truncate--\x3e\\n\\nIn India, we have two types of Music which are **Hindustani Shastreeya Sangeeth** (Hindustani) and **Karnataka Shastreeya Sangeeth** (Carnatic). These are Classical Music forms. *Hindustani Classical Music* is from the North part of India and *Carnatic Classical Music* is from the South part of India. These forms they have the same 7 swaras (Sa-Shadjam, Re-Rishabham, Ga-Gandharam, Ma-Madyamam, Pa-Panchamam, Da-Daiwatham, Ni-Nishadham). The basic difference between these is in the form of compositions and the concert setup. *Hindustani* compositions are Khayal, Dhrupad, Tarana, Thumri, Dhamaar, and concert setup is Singer supported by Harmonium, Tabla, etc. *Carnatic* compositions are Varnam, Kriti, Tillana, Javalis etc. and concert setup is Singer supported by Violin, Mridangam, etc. You can know more about Indian Classical Music form [this](https://en.wikipedia.org/wiki/Indian_classical_music) link.\\n\\n![Hindustani Music](./hindustani.jpeg)\\n![Carnatic Music](./carnatic.jpeg)\\n\\n*Above pictures Left: Hindustani Music, Right: Carnatic Music*\\n\\n### Musical Instrument\\n\\nIt is an Instrument which produces different sounds. Instruments are used to support the singer while singing. Instrumentalists use these instruments and produce a sound which suits the context of the song. This gives feel to the song.\\n\\nYou might have a doubt that what percussion is? Instruments are divided again into *Percussion* and *Non-Percussion* Instruments. All the Drum Instruments (sounded by being struck, scraped or rubbed by hand) come under Percussion. And other Instruments come under Non-Percussion Instruments.\\n\\nWhere there is Music there are Instruments also. So, here there are both Hindustani and Carnatic Instruments. These instruments are designed according to their respective Music. In the Hindustani Music, one of the Instrument is **Tabla**. As Tabla is a Drum type Instrument it is a **Percussion Instrument**.\\n\\n![Tabla](./tabla.jpeg)\\nTabla\\n\\n![Phakawaj](./phakawaj.jpeg)\\nPhakawaj\\n\\n### Tabla\\n\\nIt it is a Hindustani Instrument which consists of two drums Bayan (Big Drum), Tabla (Small Drum). These two are hollow from inside. Bayan is made of Metal and Tabla is made of Wood. The top layer is made of Leather. Bayan is Low pitched and Tabla is High pitched. There is a Hammer which is used for tuning Tabla. Tabla is played using two Hands with different finger moments (both or either of hands). Tabla is originated from **Phakawaj** which is also a Hindustani Musical Instrument. Tabla was invented by *Ustad Amir Khusro* during the 13th Century. Once When Ustad Amir Khusro asked his students to bring his Phakawaj to the Royal Court to play in front of the King his students on the way accidentally broke it. Then Ustad Amir Khusro played on the same with which came a beautiful sound. From then it was called \u091f\u0942\u091f\u093e \u0924\u094b \u092c\u094b\u0932\u093e which means \u201cSpoke even Broken\u201d. From then it is now called **Tabla**."}]}')}}]);