"use strict";(self.webpackChunkdocusaurus_blog=self.webpackChunkdocusaurus_blog||[]).push([[7964],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),c=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=c(a),m=r,d=h["".concat(o,".").concat(m)]||h[m]||u[m]||i;return a?n.createElement(d,l(l({ref:t},p),{},{components:a})):n.createElement(d,l({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=h;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var c=2;c<i;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},7775:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const i={slug:"2021/flutter-post-caching",title:"Flutter Caching with POST Web Api",date:"2021-08-12 12:32:00 +0530",tags:["Flutter","Tech","Open-Source"],authors:["immadisairaj"],comments:!0},l=void 0,s={permalink:"/blog/2021/flutter-post-caching",source:"@site/blog/2021-08-12-flutter-post-caching/index.md",title:"Flutter Caching with POST Web Api",description:"If you want to cache web API's in your flutter project, then follow this blog.",date:"2021-08-12T12:32:00.000Z",formattedDate:"August 12, 2021",tags:[{label:"Flutter",permalink:"/blog/tags/flutter"},{label:"Tech",permalink:"/blog/tags/tech"},{label:"Open-Source",permalink:"/blog/tags/open-source"}],readingTime:2.735,hasTruncateMarker:!0,authors:[{name:"Sai Rajendra Immadi",title:"Flutter Developer",url:"https://github.com/immadisairaj",imageURL:"https://github.com/immadisairaj.png",key:"immadisairaj"}],frontMatter:{slug:"2021/flutter-post-caching",title:"Flutter Caching with POST Web Api",date:"2021-08-12 12:32:00 +0530",tags:["Flutter","Tech","Open-Source"],authors:["immadisairaj"],comments:!0},prevItem:{title:"Effort Behind a Dance Program",permalink:"/blog/2021/effort-behind-a-dance-program/"},nextItem:{title:"Power of Mistakes",permalink:"/blog/2020/mistakes/"}},o={authorsImageUrls:[void 0]},c=[{value:"flutter_cache_manager",id:"flutter_cache_manager",level:3},{value:"POST API with flutter_cache_manager",id:"post-api-with-flutter_cache_manager",level:3},{value:"Steps to Cache",id:"steps-to-cache",level:2},{value:"Assumptions",id:"assumptions",level:3},{value:"URL string",id:"url-string",level:3},{value:"Packages Needed",id:"packages-needed",level:3},{value:"Caching POST data",id:"caching-post-data",level:3}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"If you want to cache web API's in your flutter project, then follow this blog."),(0,r.kt)("h3",{id:"flutter_cache_manager"},"flutter_cache_manager"),(0,r.kt)("p",null,"Caching a normal GET request has been made simple using the package ",(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/flutter_cache_manager"},"flutter_cache_manager"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"var file = await DefaultCacheManager().getSingleFile(url);\n")),(0,r.kt)("p",null,"By simply using the above command, the data in the request will be retrieved from the cache (if present), else will be retrieved from the URL by storing in the cache."),(0,r.kt)("h3",{id:"post-api-with-flutter_cache_manager"},"POST API with flutter_cache_manager"),(0,r.kt)("p",null,"What will happen when there is a POST request which you want to cache in a flutter application?"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/flutter_cache_manager"},"flutter_cache_manager")," does not provide option to send a POST request and cache. So, the following steps will help you in caching the POST request in your flutter application."),(0,r.kt)("h2",{id:"steps-to-cache"},"Steps to Cache"),(0,r.kt)("h3",{id:"assumptions"},"Assumptions"),(0,r.kt)("p",null,"For the steps, I will assume that to get data, a POST request is needed which has form data as input and HTML as output."),(0,r.kt)("p",null,"The solution which I provide can be edited as needed and used for different cases."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},'Example base URL: "https://a.com/send-form-data"\n\nExample form data:\nvar data = new Map<String, dynamic>();\ndata[\'name\'] = "Name";\ndata[\'id\'] = "xxx";\n')),(0,r.kt)("h3",{id:"url-string"},"URL string"),(0,r.kt)("p",null,"As the base URL to get the data is always the same (",(0,r.kt)("inlineCode",{parentName:"p"},"https://a.com/send-form-data"),"), we can use the form data to create a unique URL that can be used as a key URL for caching the data retrieved."),(0,r.kt)("p",null,"An example unique URL can be of the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'https://a.com/send-form-data?name="Name"&id="xxx"\n')),(0,r.kt)("p",null,"Here, we are appending the form data similar to the parameters and making it unique. You can use other methods also to make the link unique."),(0,r.kt)("h3",{id:"packages-needed"},"Packages Needed"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For caching the data, we will be using ",(0,r.kt)("a",{parentName:"li",href:"https://pub.dev/packages/flutter_cache_manager"},"flutter_cache_manager"),"."),(0,r.kt)("li",{parentName:"ul"},"For sending POST requests, we will be using ",(0,r.kt)("a",{parentName:"li",href:"https://pub.dev/packages/http"},"http"))),(0,r.kt)("p",null,"Make sure you add packages in ",(0,r.kt)("inlineCode",{parentName:"p"},"pubspec.yaml")," and import the packages before using them"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter_cache_manager/flutter_cache_manager.dart';\nimport 'package:http/http.dart' as http;\n")),(0,r.kt)("h3",{id:"caching-post-data"},"Caching POST data"),(0,r.kt)("p",null,"By using the below code, you can easily cache the POST data."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"import 'dart:typed_data'; // import for Unit8List\n\n// [baseUrl] is the base url to get the POST data\n// [finalUrl] is the unique url used as key for caching\n// [formData] is the form data to be requested\n_getData(String baseUrl, String finalUrl, Map<String, dynamic> formData) async {\n  // Considering the response as String\n  String tempResponse = '';\n  // checks if the file exists in cache\n  var fileInfo = await DefaultCacheManager().getFileFromCache(finalUrl);\n  if (fileInfo == null) {\n    // get data from url if not present in cache\n    http.Response response;\n    try {\n      response = await http\n          .post(Uri.parse(baseUrl), body: formData);\n    } on SocketException catch (_) {\n      // TODO: Handle Exception\n    }\n    tempResponse = response.body;\n\n    // put data into cache after getting from internet\n    List<int> list = tempResponse.codeUnits;\n    Uint8List fileBytes = Uint8List.fromList(list);\n    DefaultCacheManager().putFile(finalUrl, fileBytes);\n  } else {\n    // get data from file if present in cache\n    tempResponse = fileInfo.file.readAsStringSync();\n  }\n  _parseData(tempResponse);\n}\n")),(0,r.kt)("p",null,"Steps Happening:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"By using the ",(0,r.kt)("a",{parentName:"li",href:"https://pub.dev/packages/http"},"http")," package, we send the POST request and get the HTTP response."),(0,r.kt)("li",{parentName:"ul"},"Using the response, we convert the type of response and put the file into cache using ",(0,r.kt)("a",{parentName:"li",href:"https://pub.dev/packages/flutter_cache_manager"},"flutter_cache_manager"),"."),(0,r.kt)("li",{parentName:"ul"},"From next time when the method is called with the same unique URL, it retrieves the data from the cache.")),(0,r.kt)("p",null,"We have successfully made the caching happen for POST requests..\nHappy Caching!!"))}u.isMDXComponent=!0}}]);